name: Node CI and Release

on:
  push:
    branches:
      - '**'
    tags:
      - '*'
  pull_request:
    branches:
      - '**'

jobs:
  lint:
    runs-on: ubuntu-20.04
    env:
      IS_CI_ENV: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Run linting checks
        run: |
          cd types && npm install --loglevel=error && npm run lint && cd ..
          cd browse && npm install --loglevel=error @typescript-eslint/parser @typescript-eslint/eslint-plugin && npm run lint && cd ..
          cd api && npm install --loglevel=error @typescript-eslint/parser @typescript-eslint/eslint-plugin github:TheCacophonyProject/apidoc-plugin-ts#v1.1.0 && npm run lint && cd ..
          cd integration-tests && npm install --loglevel=error @typescript-eslint/parser @typescript-eslint/eslint-plugin eslint-plugin-cypress eslint-plugin-no-only-tests && npm run lint && cd ..

  test-batch-1:
    runs-on: ubuntu-20.04

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375
        env:
          DOCKER_TLS_CERTDIR: ""

    env:
      IS_CI_ENV: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify installation

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up Docker environment
        run: |
          docker-compose build
          docker-compose up --force-recreate &> dockerstart.log &
          node ./api/waitForApi.js || { docker ps; docker-compose logs; exit 1; }

      - name: Apply migration undo and redo to test undo migration
        run: |
          docker-compose exec server /app/api/node_modules/.bin/sequelize db:migrate:undo --config /app/api/config/app_test_default.js --migrations-path /app/api/migrations
          docker-compose exec server /app/api/node_modules/.bin/sequelize db:migrate --config /app/api/config/app_test_default.js --migrations-path /app/api/migrations

      - name: Run Cypress tests
        run: |
          cd integration-tests    
          npm install --loglevel=error
          npm run ci-batch-1

  test-batch-2:
    runs-on: ubuntu-20.04

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375
        env:
          DOCKER_TLS_CERTDIR: ""

    env:
      IS_CI_ENV: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify installation

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up Docker environment
        run: |
          docker-compose build
          docker-compose up --force-recreate &> dockerstart.log &
          node ./api/waitForApi.js || { docker ps; docker-compose logs; exit 1; }

      - name: Run Cypress tests
        run: |
          cd integration-tests        
          npm install --loglevel=error
          npm run ci-batch-2   

  build:
    runs-on: ubuntu-20.04
    env:
      IS_CI_ENV: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install global npm packages
        run: npm install -g --loglevel=error npm apidoc@0.50.0 eslint prettier

      - name: Generate API docs
        run: |
          cd api
          npm update --loglevel=error apidoc-plugin-ts
          npm run apidoc

      - name: Prepare for deployment
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          version=${GITHUB_REF#refs/tags/v}
          mkdir /tmp/nfpm
          curl -sL https://github.com/goreleaser/nfpm/releases/download/v0.9.5/nfpm_0.9.5_Linux_x86_64.tar.gz | tar -C /tmp/nfpm -xzf -
          export PATH=/tmp/nfpm:$PATH
          npm install -g json
          _release/build.sh ${version}

      - name: Upload release assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*.deb"
          allowUpdates: true
